version: 2.1

jobs:
  test:
    docker:
      - image: docker:20.10.7-dind
    steps:
      - setup_remote_docker:
          #version: 20.10.7
          docker_authentication: true
      - checkout
      - run:
          name: Debug Environment Variables
          command:  |
            echo "DOCKERHUB_USERNAME=$DOCKERHUB_USERNAME"
            if [ -z "$DOCKERHUB_PASSWORD" ]; then echo "DOCKERHUB_PASSWORD is NOT set"; else echo "DOCKERHUB_PASSWORD is set"; fi
      - run:
          name: Install Node.js
          command: apk add --no-cache nodejs npm
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Install SQLite
          command: apk add --no-cache sqlite
      - run:
          name: Run Tests
          command: npm test

  build:
    docker:
      - image: docker:20.10.7-dind
    steps:
      - checkout
      - setup_remote_docker:
          #version: 20.10.7
          docker_authentication: true
      - run:
          name: Install Node.js
          command: apk add --no-cache nodejs npm
      - run:
          name: Build Docker Image
          command: docker build -t frank5005/to-do-app:latest .
      - run:
          name: Save Docker Image  # ✅ Save the image so it can be used in publish job
          command: docker save -o to-do-app.tar frank5005/to-do-app:latest
      - persist_to_workspace:  # ✅ Store the saved image for the next job
          root: .
          paths:
            - to-do-app.tar

  publish:
    docker:
      - image: docker:20.10.7-dind
    steps:
      - checkout
      - setup_remote_docker:
          #version: 20.10.7
          docker_authentication: true
      - run:
          name: Check Docker Login Status
          command: docker info | grep -i "username"
      - run:
          name: Install Node.js
          command: apk add --no-cache nodejs npm
      - attach_workspace:  # ✅ Attach workspace to retrieve the saved image
          at: .
      - run:
          name: Load Docker Image  # ✅ Load the image before tagging and pushing
          command: docker load -i to-do-app.tar
      #- run:
          #name: Login to DockerHub
          #command: docker login 
      - run:
          name: Tag and Push Docker Image
          command: |
            docker tag frank5005/to-do-app:latest frank5005/to-do-app:$CIRCLE_SHA1
            docker push frank5005/to-do-app:$CIRCLE_SHA1
            docker push frank5005/to-do-app:latest 
          #docker push frank5005/to-do-app:$CIRCLE_SHA1

workflows:
  version: 2
  build:
    jobs:
      - test
      - build
      - publish:
          requires:
            - build
